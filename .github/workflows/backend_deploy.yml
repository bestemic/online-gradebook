name: 'API - Build and Deploy to GCP'

on:
  workflow_dispatch:
    inputs:
      add_user:
        description: 'Add a new user (default: false)'
        required: true
        default: 'false'
        type: boolean
      first_name:
        description: 'First name of the user'
        required: false
        type: string
      last_name:
        description: 'Last name of the user'
        required: false
        type: string
      email:
        description: 'Email of the user'
        required: false
        type: string
      password:
        description: 'Password of the user'
        required: false
        type: string
      phone_number:
        description: 'Phone number of the user'
        required: false
        type: string
      birth:
        description: 'Birthdate of the user (YYYY-MM-DD)'
        required: false
        type: string
      roles:
        description: 'Roles for the user (comma-separated)'
        required: false
        type: string

env:
  SERVICE: "${{ vars.GCP_APP_NAME }}-api"
  GAR_NAME: "${{ vars.GCP_APP_NAME }}-repository"

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build jar
        working-directory: backend
        run: mvn clean package

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ vars.GCP_REGION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          DOCKER_TAG="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" backend
          docker push "${DOCKER_TAG}"

      - name: Deploy to Cloud Run Job
        id: deploy
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
          --image ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }} \
          --allow-unauthenticated \
          --quiet \
          --platform managed \
          --region ${{ vars.GCP_REGION }} \
          --project ${{ vars.GCP_PROJECT }} \
          --format json \
          --update-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --update-env-vars INIT_USER=${{ github.event.inputs.add_user }} \
          --update-env-vars FIRST_NAME=${{ github.event.inputs.first_name }} \
          --update-env-vars LAST_NAME=${{ github.event.inputs.last_name }} \
          --update-env-vars EMAIL=${{ github.event.inputs.email }} \
          --update-env-vars PASSWORD=${{ github.event.inputs.password }} \
          --update-env-vars PHONE_NUMBER=${{ github.event.inputs.phone_number }} \
          --update-env-vars BIRTH=${{ github.event.inputs.birth }} \
          --update-env-vars ROLES=${{ github.event.inputs.roles }} \
          --user-output-enabled=false

      - name: Turn on Public Access
        run: |-
          gcloud run services add-iam-policy-binding ${{ env.SERVICE }} \
          --member="allUsers" \
          --role="roles/run.invoker" \
          --region=${{ vars.GCP_REGION }} \
          --project=${{ vars.GCP_PROJECT }}