name: 'Infrastructure onboarding'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - deploy
          - destroy

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Setup terraform variables
        id: vars
        run: |-
          cat > pipeline.auto.tfvars <<EOF
          region="${{ vars.GCP_REGION }}" 
          project_id="${{ vars.GCP_PROJECT }}"
          app-name="${{ vars.GCP_APP_NAME }}"
          EOF

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'deploy' }}
        run: terraform plan -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'deploy' }}
        id: apply
        run: terraform apply -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Get Terraform Output
        if: ${{ github.event.inputs.action == 'deploy' }}
        id: tf_output
        run: |
          terraform output -raw db_password > password.txt
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Authenticate GitHub CLI
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Update GitHub Secrets with Database Password
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          PASSWORD=$(cat password.txt)
          echo "Updating GitHub secret DB_PASSWORD..."
          gh secret set DB_PASSWORD --body "$PASSWORD"

      - name: Terraform Plan Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform plan -destroy -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}